# Copyright (c) 2016 - 2021 Advanced Micro Devices, Inc. All rights reserved.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

cmake_minimum_required(VERSION 3.16.8)
project(hip_dev)

if(WIN32)
  install(DIRECTORY @HIP_COMMON_DIR@/bin DESTINATION . USE_SOURCE_PERMISSIONS)
else()
  install(DIRECTORY @HIP_COMMON_DIR@/bin DESTINATION . USE_SOURCE_PERMISSIONS
          PATTERN *.bat EXCLUDE)
endif()

if (NOT @HIPCC_BIN_DIR@ STREQUAL "")
  install(PROGRAMS @HIPCC_BIN_DIR@/hipcc.bin DESTINATION bin)
  install(PROGRAMS @HIPCC_BIN_DIR@/hipconfig.bin DESTINATION bin)
endif()

install(DIRECTORY @hip_SOURCE_DIR@/bin DESTINATION . USE_SOURCE_PERMISSIONS)
install(DIRECTORY @HIP_COMMON_DIR@/include DESTINATION .)
install(DIRECTORY @hip_SOURCE_DIR@/include/hip/amd_detail DESTINATION include/hip)
install(DIRECTORY @hip_SOURCE_DIR@/include/hip/nvidia_detail DESTINATION include/hip)
install(FILES @PROJECT_BINARY_DIR@/include/hip/amd_detail/hip_prof_str.h
        DESTINATION include/hip/amd_detail)
install(FILES @PROJECT_BINARY_DIR@/include/hip/hip_version.h
        DESTINATION include/hip)
install(FILES @PROJECT_BINARY_DIR@/.hipVersion DESTINATION bin)
install(DIRECTORY @HIP_COMMON_DIR@/cmake DESTINATION .)

#############################
# Packaging steps
#############################
set(CPACK_SET_DESTDIR TRUE)
set(CPACK_INSTALL_PREFIX @CPACK_INSTALL_PREFIX@ )
set(CPACK_PACKAGE_NAME "hip-dev")
set(CPACK_PACKAGE_DESCRIPTION_SUMMARY "HIP Heterogenous-computing Interface for Portability [DEVELOPMENT]")
set(CPACK_PACKAGE_DESCRIPTION "HIP:
      Heterogenous-computing Interface for Portability [DEVELOPMENT]")
set(CPACK_PACKAGE_VENDOR "Advanced Micro Devices, Inc.")
set(CPACK_PACKAGE_CONTACT "HIP Support <hip.support@amd.com>")
set(CPACK_PACKAGE_VERSION_MAJOR @HIP_VERSION_MAJOR@)
set(CPACK_PACKAGE_VERSION_MINOR @HIP_VERSION_MINOR@)
set(CPACK_PACKAGE_VERSION_PATCH @HIP_PACKAGING_VERSION_PATCH@)
set(CPACK_PACKAGE_VERSION @HIP_VERSION_MAJOR@.@HIP_VERSION_MINOR@.@HIP_PACKAGING_VERSION_PATCH@)
set(CPACK_GENERATOR "TGZ;DEB;RPM")

set(CPACK_BINARY_DEB "ON")
set(CPACK_DEBIAN_PACKAGE_RELEASE @CPACK_DEBIAN_PACKAGE_RELEASE@)
set(CPACK_DEBIAN_FILE_NAME "DEB-DEFAULT")
set(CPACK_DEBIAN_PACKAGE_CONTROL_EXTRA "${PROJECT_BINARY_DIR}/postinst;${PROJECT_BINARY_DIR}/prerm")
set(CPACK_DEBIAN_PACKAGE_DEPENDS "perl (>= 5.0), liburi-encode-perl, libfile-basedir-perl, libfile-copy-recursive-perl, libfile-listing-perl, libfile-which-perl, libc6, file, rocm-core")
set(CPACK_DEBIAN_PACKAGE_PROVIDES "hip-base")
set(CPACK_DEBIAN_PACKAGE_REPLACES "hip-base")

set(CPACK_BINARY_RPM "ON")
set(CPACK_RPM_PACKAGE_RELEASE @CPACK_RPM_PACKAGE_RELEASE@)
set(CPACK_RPM_PACKAGE_NAME "hip-devel")
set(CPACK_RPM_FILE_NAME "RPM-DEFAULT")
set(CPACK_RPM_PACKAGE_ARCHITECTURE "${CMAKE_SYSTEM_PROCESSOR}")
set(CPACK_RPM_POST_INSTALL_SCRIPT_FILE "${PROJECT_BINARY_DIR}/postinst")
set(CPACK_RPM_PRE_UNINSTALL_SCRIPT_FILE "${PROJECT_BINARY_DIR}/prerm")
set(CPACK_RPM_PACKAGE_AUTOREQPROV " no")
set(CPACK_RPM_PACKAGE_REQUIRES "perl >= 5.0, perl-File-Which, perl-File-Listing, perl-File-BaseDir, perl-URI-Encode, file, rocm-core")
set(CPACK_RPM_PACKAGE_PROVIDES "hip-base")
set(CPACK_RPM_PACKAGE_OBSOLETES "hip-base")
set(CPACK_BINARY_RPM "ON")
set(CPACK_RPM_EXCLUDE_FROM_AUTO_FILELIST_ADDITION "/opt")
set(CPACK_SOURCE_GENERATOR "TGZ")
# Remove dependency on rocm-core if -DROCM_DEP_ROCMCORE=ON not given to cmake
set(ROCM_DEP_ROCMCORE "@ROCM_DEP_ROCMCORE@")
if(NOT ROCM_DEP_ROCMCORE)
    string(REGEX REPLACE ",? ?rocm-core" "" CPACK_RPM_PACKAGE_REQUIRES ${CPACK_RPM_PACKAGE_REQUIRES})
    string(REGEX REPLACE ",? ?rocm-core" "" CPACK_DEBIAN_PACKAGE_DEPENDS ${CPACK_DEBIAN_PACKAGE_DEPENDS})
endif()

set ( CPACK_RESOURCE_FILE_LICENSE "@hip_SOURCE_DIR@/LICENSE.txt" )
# Install license file
install(FILES ${CPACK_RESOURCE_FILE_LICENSE} DESTINATION share/doc/${CPACK_PACKAGE_NAME})
set(CPACK_RPM_PACKAGE_LICENSE "MIT")

include(CPack)
